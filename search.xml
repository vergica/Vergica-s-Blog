<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>snap重新下载软件</title>
    <url>/2021/03/28/snap%E9%87%8D%E6%96%B0%E4%B8%8B%E8%BD%BD%E8%BD%AF%E4%BB%B6/</url>
    <content><![CDATA[<p>今天用Ubuntu自带的应用商店下载PyCharm,太慢了不能忍就取消了，结果之后怎么下也下不成了,一直报错。<br><code>error: snap &quot;pycharm-community&quot; has &quot;install-snap&quot; change in progress</code><br>查找资料后终于发现了解决办法。下载软件不要用应用商店，用命令行。<br>1.出现这种状况多半是之前安装错误的软件还没安装完。先检查一下：<code>snap changes</code><br>发现是这样子的：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ID   Status  Spawn                      Ready                   Summary</span><br><span class="line">1    Done    46 days ago, at 02:57 CST  yesterday at 14:57 CST  Initialize system state</span><br><span class="line">2    Done    yesterday at 14:56 CST     yesterday at 14:56 CST  Initialize device</span><br><span class="line">3    Done    today at 10:24 CST         today at 10:26 CST      Auto-refresh snap &quot;snapd&quot;</span><br><span class="line">4    Doing   today at 10:36 CST         -                       Install &quot;pycharm-community&quot; snap from &quot;latest&#x2F;stable&quot; channel</span><br></pre></td></tr></table></figure>
<p>2.终止id=4的安装：<code>snap abort 4</code><br>3.重新搜索一下:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">jason@jason-B365M-H:~$ snap find pycharm</span><br><span class="line">Name                  Version   Publisher   Notes    Summary</span><br><span class="line">pycharm-community     2020.3.5  jetbrains✓  classic  Python IDE for Professional Developers</span><br><span class="line">pycharm-professional  2020.3.5  jetbrains✓  classic  Python IDE for Professional Developers</span><br><span class="line">pycharm-educational   2020.3.4  jetbrains✓  classic  Easy and Professional Tool to Learn &amp; Teach Programming with Python</span><br></pre></td></tr></table></figure>
<p>输入<code>snap install pycharm-community --classic</code>再次安装即可。</p>
]]></content>
      <categories>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>snap</tag>
      </tags>
  </entry>
  <entry>
    <title>安装坚果云作为同步盘</title>
    <url>/2021/04/04/%E5%AE%89%E8%A3%85%E5%9D%9A%E6%9E%9C%E4%BA%91%E4%BD%9C%E4%B8%BA%E5%90%8C%E6%AD%A5%E7%9B%98/</url>
    <content><![CDATA[<p>对百度网盘的限速忍无可忍，一番了解后，换成使用坚果云，免费版有上传下载的流量限制，不过勉强够用了。<br>按照<a href="https://www.jianguoyun.com/s/downloads/linux">官网</a>一步步安装就好了，一些同步功能还是满贴心的，其他功能有待发掘。</p>
]]></content>
      <categories>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>坚果云</tag>
      </tags>
  </entry>
  <entry>
    <title>爬取图片并上传至图床</title>
    <url>/2021/04/03/%E7%88%AC%E5%8F%96%E5%9B%BE%E7%89%87%E5%B9%B6%E4%B8%8A%E4%BC%A0%E8%87%B3%E5%9B%BE%E5%BA%8A/</url>
    <content><![CDATA[<p>本来博客文章封面采用的是随机外链，后来想想不靠谱，还是从网上爬了50张图片充当门面。附上代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># coding&#x3D;utf-8</span><br><span class="line">import requests</span><br><span class="line">import hashlib  # 通过校验md5去重</span><br><span class="line">i &#x3D; 1</span><br><span class="line">l &#x3D; []</span><br><span class="line">url &#x3D; &#39;https:&#x2F;&#x2F;sm.ms&#x2F;api&#x2F;v2&#x2F;upload&#39;</span><br><span class="line">headers &#x3D; &#123;&#39;Authorization&#39;: &#39;xxxxxx&#39;&#125;  # 需要注册sm图床账号</span><br><span class="line">while i &lt;&#x3D; 50:</span><br><span class="line">    res &#x3D; requests.get(&#39;http:&#x2F;&#x2F;acg.yanwz.cn&#x2F;wallpaper&#x2F;api.php&#39;).content  # 感谢汐岑提供接口</span><br><span class="line">    text &#x3D; hashlib.md5(res).hexdigest()</span><br><span class="line">    if text not in l:</span><br><span class="line">        try:</span><br><span class="line">            l.append(text)</span><br><span class="line">            path &#x3D; &#39;&#x2F;home&#x2F;jason&#x2F;PycharmProjects&#x2F;BlogCover&#x2F;cover&#x2F;&#123;&#125;&#39;.format(i)</span><br><span class="line">            with open(path, &#39;wb&#39;) as f:</span><br><span class="line">                f.write(res)</span><br><span class="line">            files &#x3D; &#123;&#39;smfile&#39;: open(path, &#39;rb&#39;)&#125;</span><br><span class="line">            res2 &#x3D; requests.post(url, files&#x3D;files, headers&#x3D;headers).json()</span><br><span class="line">            print(&#39;  - &#39; + res2[&#39;data&#39;][&#39;url&#39;])</span><br><span class="line">            i +&#x3D; 1</span><br><span class="line">        except Exception as e:</span><br><span class="line">            pass</span><br></pre></td></tr></table></figure>
<p>友情提示：注册时有可能会需要科学上网哈～～我目前发现<a href="https://github.com/getlantern/lantern">lantern</a>还不错，详情自己google吧。</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>sm图床</tag>
      </tags>
  </entry>
  <entry>
    <title>自动部署GiteePages</title>
    <url>/2021/04/02/%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2GiteePages/</url>
    <content><![CDATA[<p>在国内，Gitee访问速度比Github快很多，但不得不说，每次要人为点击“更新”太恶心了……于是用python写了几行代码实现自动部署GiteePages，欢迎斧正。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># coding&#x3D;utf-8</span><br><span class="line">import time</span><br><span class="line">from selenium import webdriver</span><br><span class="line">options &#x3D; webdriver.FirefoxOptions()</span><br><span class="line">options.add_argument(&quot;--headless&quot;)</span><br><span class="line">options.add_argument(&quot;--disable-gpu&quot;)</span><br><span class="line">driver &#x3D; webdriver.Firefox(executable_path&#x3D;&#39;&#x2F;home&#x2F;jason&#x2F;PycharmProjects&#x2F;GiteePages&#x2F;geckodriver&#39;, options&#x3D;options)</span><br><span class="line">driver.get(&#39;https:&#x2F;&#x2F;gitee.com&#x2F;login&#39;)</span><br><span class="line">time.sleep(1)</span><br><span class="line">driver.find_element_by_id(&#39;user_login&#39;).send_keys(&#39;xxxxxx&#39;)  # gitee账号</span><br><span class="line">driver.find_element_by_id(&#39;user_password&#39;).send_keys(&#39;xxxxxx&#39;)  # gitee密码</span><br><span class="line">driver.find_element_by_name(&#39;commit&#39;).click()</span><br><span class="line">driver.get(&#39;https:&#x2F;&#x2F;gitee.com&#x2F;vergica&#x2F;vergica&#x2F;pages&#39;)</span><br><span class="line">time.sleep(1)</span><br><span class="line">driver.find_element_by_css_selector(&#39;.button.orange.redeploy-button.ui.update_deploy&#39;).click()</span><br><span class="line">alertObject &#x3D; driver.switch_to.alert</span><br><span class="line">alertObject.accept()</span><br><span class="line">driver.quit()</span><br><span class="line">print(&#39;更新完毕！&#39;)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>geckodriver</tag>
      </tags>
  </entry>
  <entry>
    <title>调用api下载安装snap包</title>
    <url>/2021/03/28/%E8%B0%83%E7%94%A8api%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85snap%E5%8C%85/</url>
    <content><![CDATA[<p>说来尴尬，之前那篇文章发完，发现snap要下载3个多小时，还是放弃了……好在后来找到了一种快些的办法。<br>1.通过snapcraft.io页面找到你需要的snap包的url，这里以pycharm-community为例，它的url是snapcraft.io/pycharm-community。<br>2.安装curl，调用api。<br><code>curl -H &#39;Snap-Device-Series: 16&#39; http://api.snapcraft.io/v2/snaps/info/pycharm-community</code><br>然后对返回的json解析，比如说去json.cn，找到对应的url。<br>3.安装axel，开始多线程下载。<br><code>axel -n 32 -o /home/jason/下载 https://api.snapcraft.io/api/v1/snaps/download/Qo9GiW9eyzgN1tXmWpQ9gdstdFsj4K7E_233.snap</code><br>4.重命名，安装下载下来的snap包即可。<br><code>sudo snap install pycharm-community.snap --dangerous</code></p>
]]></content>
      <categories>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>snap</tag>
      </tags>
  </entry>
</search>
